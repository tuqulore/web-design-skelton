name: Preview with Cloud Run

on:
  push:
    branches-ignore: ["**"]
  # pull_request:
  # types: [synchronize, opened, reopened, closed]

env:
  PROJECT: ""
  HOSTNAME: asia.gcr.io
  REGION: asia-northeast1
  SERVICE: preview-${{ github.event.number }}

jobs:
  setup-build-publish-deploy:
    if: github.event.action == 'synchronize' || github.event.action == 'opened' || github.event.action == 'reopened'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: |
          gcloud config set project ${PROJECT}
          gcloud config set run/platform managed
          gcloud config set run/region ${REGION}
          gcloud auth configure-docker
      - name: Build
        run: docker build -t ${HOSTNAME}/${PROJECT}/${SERVICE} .
      - name: Publish to GCR
        run: docker push ${HOSTNAME}/${PROJECT}/${SERVICE}
      - name: Deploy the Cloud Run Service
        run: |
          gcloud run deploy ${SERVICE} --image ${HOSTNAME}/${PROJECT}/${SERVICE} --allow-unauthenticated
          PREVIEW_URL=$(gcloud run services describe ${SERVICE} --format "value(status.url)")
          gcloud run services update ${SERVICE} --set-env-vars BASE_URL=${PREVIEW_URL}
      - name: Notify
        run: |
          PREVIEW_URL=$(gcloud run services describe ${SERVICE} --format "value(status.url)")
          curl -X POST \
            --url ${{ github.event.pull_request._links.statuses.href }} \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"state\": \"success\",
              \"target_url\": \"${PREVIEW_URL}\",
              \"description\": \"Deploy preview ready! \",
              \"context\": \"deploy/preview\"
            }"

  clean:
    if: github.event.action == 'closed'
    runs-on: ubuntu-20.04
    steps:
      - uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: |
          gcloud config set project ${PROJECT}
          gcloud config set run/platform managed
          gcloud config set run/region ${REGION}
          gcloud auth configure-docker
      - name: Delete the Cloud Run Service
        run: gcloud --quiet run services delete ${SERVICE}
      - name: Delete the Docker image from GCR
        run: gcloud container images delete ${HOSTNAME}/${PROJECT}/${SERVICE}
